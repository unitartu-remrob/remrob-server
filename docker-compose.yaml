version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: remrob_postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: remrob
    volumes:
      - remrob_db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  flask:
    container_name: remrob_booking
    build:
      context: .
      dockerfile: Dockerfile.flask
      args:
        VUE_APP_UTC_OFFSET: "+2"
    depends_on:
      - "postgres"
    environment:
      TZ: "Europe/Tallinn"
    command: npm start
  node-container-api:
    container_name: node-container-api
    build:
      context: .
      dockerfile: Dockerfile.node
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      TZ: "Europe/Tallinn"
      UTC_OFFSET: '+2'
    command: npm run prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  web:
    image: nginx:1.22.1
    container_name: remrob_nginx
    depends_on:
      - flask
      - node-container-api
    ports:
      - "8080:80"
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
volumes:
  remrob_db: {}
networks:
  default:
    name: remrob_sim